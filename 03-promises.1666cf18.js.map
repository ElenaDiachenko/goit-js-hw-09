{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SA2BpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MApCPL,EAAKa,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,SAASH,EAAEI,OAAOb,MAAMc,OACpC,MAAMC,EAAOH,SAASH,EAAEI,OAAOE,KAAKD,OAC9BE,EAASJ,SAASH,EAAEI,OAAOG,OAAOF,OAEvC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAU,EACnDnB,EAAcmB,EAAUN,GAExBO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAEtDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,UAElDW,GAASI,EAEXpB,EAAK4B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm)\n\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = parseInt(e.target.delay.value);\n  const step = parseInt(e.target.step.value);\n  const amount = parseInt(e.target.amount.value);\n\n   for (let position = 1; position <= amount; position+=1) {\n     createPromise(position, delay)\n       \n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n      delay += step;\n    }\n    form.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","parseInt","target","value","step","amount","position1","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.1666cf18.js.map"}